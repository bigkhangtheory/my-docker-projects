user   www-data;

worker_processes auto;

error_log  /var/log/nginx/error.log warn;
pid         /var/run/nginx.pid;

events {
    # Allow worker to accept 1024 simultaneous connections from a client
    worker_connections  1024;
    # worker_processes and work_connections allows you to calculate maxclients value:
    # max_clients = worker_processes * worker_connections
    # Allow worker to accept many connections in the queue at a time
    multi_accept        on;
    # Specifies the method to process a connection from the client
    use                 epoll;
    # Specifies the number of events to transfer to the kernel
    epoll_events        512;

}

http {
    include     mime.types;
    # anything written in /opt/nginx/conf/mime.types is interpreted as if written inside the http { } block
    default_type    application/octet-stream;

    log_format  main    '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log main;

    sendfile    on; # reverse proxy

    # prevent small packets from saturating the network
    tcp_nopush  on;
    tcp_nodelay on;

    proxy_send_timeout  120;
    proxy_read_timeout  300;
    proxy_buffering     off;
    keepalive_timeout   65;
    include /etc/nginx/conf.d/*.conf;

    map $http_host $this_host {
        "" $host;
        default $http_host;
    }
    map $http_x_forwarded_proto $the_scheme {
        default $http_x_forwarded_proto;
        "" $scheme;
    }
    map $http_x_forwarded_host $the_host {
        default $http_x_forwarded_host;
        "" $this_host;
    }
    map $http_upgrade $connection_upgrade {
        default upgrade;
        "" close;

    }# Hello Bruce, I'm going to place in the container
}
